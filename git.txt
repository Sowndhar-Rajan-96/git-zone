ðŸ”¹ Git Command Guide with Explanations

    cd reponame â†’ Change directory to the repository folder.
    Example: cd my-repo

    git init â†’ Initializes an empty Git repository.
    This converts the folder into a Git-tracked project (files become untracked initially).

    git add filename â†’ Stages a specific file for the next commit.
    Example: git add index.html

    git add . â†’ Stages all changes (new, modified, and deleted files) in the current folder.

    git status â†’ Displays the status of files (tracked, untracked, staged, etc.).

    git commit -m "commit message" â†’ Records staged changes with a descriptive message.
    Example: git commit -m "Initial commit"

    git remote add origin <repo-link> â†’ Links your local repo to the remote repository.
    Example: git remote add origin https://github.com/username/my-repo.git

    git branch â†’ Displays the current branch.

    git branch -m main â†’ Renames the current branch to main.
    (Best practice since GitHub now defaults to main instead of master).

    git push origin main â†’ Pushes your committed changes to the remote repository.

    git pull â†’ Fetches the latest changes from the remote repo and merges them into your local repo.

    cd .. â†’ Moves back one directory in the folder structure.

    git branch -a â†’ Lists all branches (local & remote).

    git checkout branchname â†’ Switches to another branch.
    Example: git checkout feature-branch

    git diff branchname â†’ Compares your current branch with another branch to see the differences.

    git merge branchname â†’ Merges changes from the specified branch into the current branch.
    Example: git merge feature-branch